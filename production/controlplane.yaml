# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # secret
    #ENC[AES256_GCM,data:CdmgKG0gNPvguZs/6CkHJgslN79UBgx5z//yQlgND02mQwWKlXlC0VcOLSJjTg6cDEnpbw==,iv:+OmThmo0+3RbKs4O9vm7UacHrORxFamI3xtYTkHBCik=,tag:Yfhey8YABs2dzaUxmgBksA==,type:comment]
    type: ENC[AES256_GCM,data:PROWuhxqbti7lN+L,iv:fvzP530JkWXf/eEnEBzaGasv+5WRtVVrwXNfxEhZCC4=,tag:Fp33dHL6qKnpbm9F/vvdaQ==,type:str]
    # secret
    #ENC[AES256_GCM,data:EUC4NL/D+OVj1lBiUSILlXiG3NNcUUVtHH+wb1fJCJBiTC77DoNklF2L+VI54nfPsFy0+eCxFdErNNTLs/9Ms3M=,iv:S1cc1BbQckKg5GT0G1ByZVAXIvT+QW7LWgpAOKr9IUI=,tag:wEXbmzygJU8e31/p11LeaQ==,type:comment]
    token: ENC[AES256_GCM,data:WR5I4N9QIJq7Syp1kz8VhO/eYAstQz0=,iv:nMc2y2zvxZHzthyVWnsXKm6LosGCdTMBpOtZgoycrjk=,tag:lUMuBlvJsf/htTu8/F4wBg==,type:str]
    # secret: The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:eMKHE5/NZVF8sbnVYaW44I2NaLjIf3NQdn32dj8hnJ6bxweSN11QvUT7tlQMnSm66nBg7ib2tFaQCxiovaC3QJqo+Z0HL9DTz6aNsd0/UyNHSGFsUgpvtEJDTP8ogmtK3mQoS/iynPLFEaCjK5meR5fcWEv3CyBj54kfIAQCJntZlInYVYUlI83aC21KNG6pXd2BfzOA/JR+NJamZL5NxN+lJZMLEIl3/SqYQDCobI5ZpOd+F2puVL9Ft2LdMMjycLadwx47S+bUInUWEuz9xEXBPgTuX0acyWhX8zmqCy+ghgKk6XucExtyki1+yrAZ+ADR1xA/HU+pzITJyFfRBJi0asOBvpWI3xfOR4SEbbBv2O68CJFi6Z7uI8nbGvUlUcSo5MUDtDnNvqc+8Qpc0D5/bJDbuqL+YID5mRubeVv2N3Ta/LMQSOi/TZ15tEn00ANezRSk48zifV6tPlDZJ+ByHm4i9ZasFf2n/zyZxSrZb0ZbmOSU5cdnyaGE9E+XCAexbZwYeHGrAw3sBNQ6yNh7icA/FVcL8GGSiPmQdfYO4KZSFgVffD0jRlxHfw+ti1UiznihOK28Z2vu6LCfIOQz1spKnNNlb3y/cC+rvWFyUUu2uH8V8jJ+Lgm4FwUq7MiFQSSBBdGDIQ/+zz3dQw5FbZNDDedRNzQGd4QP+FfuTq8SZSO8k6ijocru40y+wHrbnlQvPdUq5M1wSTFcrp1c357KDPGqHA13prIJEki1wURD0GHdeIJyoJ/7Pb4lmCTRcHrnDImi6QqUdmCHdGFHZ6r397v0axVCrHF5RkLPvDNiIYcpAQEvYss1QnA8AWRy5B4TG4fuE+dXDKRCif37zSEUJgNUpZDhgbmtfNdTapWK,iv:l/g+krErkL9hwEtpVzwPSkQgfRtLvX3IJiht134OFPo=,tag:IPhLF3s8K9qnP51LimUEiA==,type:str]
        key: ENC[AES256_GCM,data:29354vmnnAD2ky4NgDAofv27Dgm0JJZMDdW6D6Le0srNaouDlgRnJUc942l1LyUTy9EN9NzbHic4ZPrLCC7w6Hi4z4s3W6hv+nx4Jp/Xi2vYzfKAhkpjIppsC3PwPRbFRhW7VGSIdkMpbPn37AfsdZgYxoM8DpF9lFXzNsGD6NUDxy2YIV4og55X/kO4M1vASbJRJvnBhWjLGUL0fOnmpnt0A+UEJZJN6gNZKczIP9Lz4mA8,iv:+IwCq20wsJ5JoA1a0/29elbVjMgdihzerjIxU2rxI4A=,tag:rGC+AN0btgwEgM/Xvqms1g==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.33.0
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: factory.talos.dev/metal-installer-secureboot/ce4c980550dd2ab1b17bbf2b08801c7eb59418eafe8f279833297925d67c7515:v1.10.5
        # Indicates if the installation disk should be wiped at installation time.
        wipe: true
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
            forwardKubeDNSToHost: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    systemDiskEncryption:
        #     # Ephemeral partition encryption.
        ephemeral:
            # Encryption provider to use for the encryption.
            provider: luks2
            #         # Defines the encryption keys generation and storage method.
            keys:
                # Key slot number for LUKS2 encryption.
                - slot: 0
                  tpm: {}
        #               
        #               # # KMS managed encryption key.
        #               # kms:
        #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
        #         
        #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
        #         # cipher: aes-xts-plain64
        #         # # Defines the encryption sector size.
        #         # blockSize: 4096
        #         # # Additional --perf parameters for the LUKS2 encryption.
        #         # options:
        #         #     - no_read_workqueue
        #         #     - no_write_workqueue
        state:
            # Encryption provider to use for the encryption.
            provider: luks2
            #         # Defines the encryption keys generation and storage method.
            keys:
                # Key slot number for LUKS2 encryption.
                - slot: 0
                  tpm: {}
#         # # Defines the encryption sector size.
#         # blockSize: 4096
#         # # Additional --perf parameters for the LUKS2 encryption.
#         # options:
#         #     - no_read_workqueue
#         #     - no_write_workqueue
# # Configures the udev system.
# udev:
#     # List of udev rules to apply to the udev system
#     rules:
#         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
# # Configures the logging system.
# logging:
#     # Logging destination.
#     destinations:
#         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
#           format: json_lines # Logs format.
# # Configures the kernel.
# kernel:
#     # Kernel modules to load.
#     modules:
#         - name: brtfs # Module name.
# # Configures the seccomp profiles for the machine.
# seccompProfiles:
#     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
#       # The `value` field is used to provide the seccomp profile.
#       value:
#         defaultAction: SCMP_ACT_LOG
# # Override (patch) settings in the default OCI runtime spec for CRI containers.
# # override default open file limit
# baseRuntimeSpecOverrides:
#     process:
#         rlimits:
#             - hard: 1024
#               soft: 1024
#               type: RLIMIT_NOFILE
# # Configures the node annotations for the machine.
# # node annotations example.
# nodeAnnotations:
#     customer.io/rack: r13a25
# # Configures the node taints for the machine. Effect is optional.
# # node taints example.
# nodeTaints:
#     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # secret: Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: ENC[AES256_GCM,data:DVyYTmnRx0Ui6vgF/6jKdHOUv2ap/ne43HnI3oHIrNohe8fdO+hKdVzOasU=,iv:jsdid47JWbto9Lmw9Iirk1ZFixTa/qZ7PpjZwM7D5gE=,tag:T8P+u13wnbBfhth2PwaRIQ==,type:str]
    # secret: Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:+TmeVTweRd5+wp+j1Vtj/6pl33YoRFQ4ZdNTgF0hvuGk/zC+2bEb/0uzk20=,iv:xYFpn7ehMz1XqWK0RgzLUUJCFWEVZ22pOmxuC270TvI=,tag:/ilnQwC9ivbWcXVgb+8HTw==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.12.50:6443
    # Configures the cluster's name.
    clusterName: joris-prd
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # secret: The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:4ANJsZI2jjEFr4L7eKT50ZGigCIdQgY=,iv:WWVV10MIqirVeTA7Z5LguAn3GOBeFavMwksUOPWS7ts=,tag:F5qJH6VFkpdvKRU5vQsyJw==,type:str]
    # secret: A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:G7dL/3nvVKLVMH/ktZ7xcHqpkBtUQRs37DTwsEa5b7yN/z4wEV/2kOzmdvI=,iv:aO8/e4ADzA4ia9wKw5vPMVjQYn8gLCi9dCSDzL7BI4U=,tag:3FE44EeHmsEkQORHtofgvQ==,type:str]
    # secret: The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:PZE/OFjMTHxVTkHBcVGruwPt935Qj8+ebPBQs0Hbuk71o/6dRQIOKv7kfXr8tWsP7LBt2eDPM/PTG7MFlGzkHD96g3jrn56dqCvkgZBvuCu4hfnwQHUxWsE+nF53VphldY/Qi/iSPTndZoSdalBedtHQl0t04o3aiL+sHevwLA1DmSuRFKuXqybWetMQ/pUBAXOm06BKYp0eiaiNhkQdT8/OY1t9e0ql7Pq9bVBoK69iC72C/ewXT6U6JwWI6AXuvTGLdIJURJYlqCYrhXsBvtR0Lg8AnN/NWHwgViYXY3E/NOuJF5l9EbIziGlHgvnT1CaXmJpBxW1XWZ5kmce7hoGW+ddxC7Q5q4zXVnChC9njvFQBVTP8gbTwNwNU++Oep6MQ41IgSsTb3ESwkNRC6+whi6ph2vjfR+VuH9erYmEG+4aZ+r//HEqrR6xqCmkAh+/TCGiw8Mhmo+d0Z1EZvUvkZSxKQOZMdY4dXkUJFmM/onaOaOVg4pXGnFyey4YVNX5qe3vAn8NWVBw+p1TW32cq+P286cFP6iNfL5fcbwGKz1fHChRlUyMNAtU1utYnPoMvVRVsCugcjjz/RNtK/6yLjcfOPGBAILiDs/B/RDncwQy81oB4jovdIcWA8DjDgssToG6QWaw9mMM/NcufPYtt3nQC5I9xYABPz+AKFkRyj7owIw94t2jMwzmMnujybAfj9+4RmxjGOUlQKasKSEjA2Q2KnrgEFuW61PLsVd8tXFUnFQTgQIH7A3knQ7tY8HwezwEj8D2dGpP/BR/kKZqf2mq1JNhISXbmp5T3p9LPssQKaxOeJROI6nqlmzNPVSsJ+a/IZDYHkAPTutoeSoQ42LWNHB3c+Im54OrplCPTKI6CPzVLR4n8Z40lGVRkBgIXsY1ewTAQZMHLI4XVxglr03mqq1N7R2Gw5FNzwEz6lpy31LVIywDeVDxiQNa1T4xXaTcS5b7cokxqxVhETaFVNJu55R1xk+Ui9qHRpsIAr/oizzLXQw6SKNoINtPFXfED1rIDGjJ+zP9Ku6JudbLy1k/ODfzGzZEPug==,iv:r2VsRPp4isBT2JccGHsivUqLOcV7ZFcGXYA/sAhP6sQ=,tag:gvMVqlA+4+V8n8WrDgsF1g==,type:str]
        key: ENC[AES256_GCM,data:JFtoVkZs0cCcGsb4hnu5rDhjaLspY46iyu8UcEk+cxZUiQH1gLzTVmuAKqMuui/1tfCEWCRla2kuchcSt2VIphrqg4YCDOZFSwcIcNYdxWRVStbPfjf/xA3dUDVaZFjvLUxFUgqtw6iYpJ6heQL31/k4zz2LMPjUZxnFwXsRyxJsCjeegC+Jx54fIGnxyTSBq8/uksag3acnJ60p2RIBGVbiKKXeMDC2fjL3E/Wryt5GBAV0Sc0r5edI05fWOZ/4Lvx9e9ihgq+j90/SKThWKThExnLBn321mSk9g44OJlQA6NH1YfliomFGp+lg3onatt4ZbpuXo7doI7yi4cEV91EwJiNoj9ZAxfU5rCgp5uHvm2SFEDgS6voODzzOUsRzkgWobt7riPN/hdZiXy7Ylw==,iv:IGPkD7tmIaWMls34fcu9VvcKEj78PJWnUt7LXMVZ3NU=,tag:wyYKw3fiexVgh8KYu61p3g==,type:str]
    # secret: The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:Ij9ruezh0VzXALh00lPl/e3K2QrSyYG4uNXtDzeAWG767rxEo0GPdfhb+8t8TSresYhoKkEDk6h41ddOEVjuYx0xTCCbuAPlH5ZkOfwf0qqo5d9gydqpK7bqdugpaXMwBG77K1ybtjb/sIio0PhuZmhXHpfANlpK7Dh3pCJNOFeoZ7t4yuzegXlvj60nzmfuy+lcD+eaqZFnQdvMSF11d0rwiLhqX8Bz2CzRLNWGiuqfCABWmF/4ZfWwXoUch6tSD/jJExQ41UczLKygVEgGw7faLsLgFZx41ZV2Wav+WmQZx9clDdimkDINzn4lL/Ea7iY/lfRU922Vl6vWpavWe6+6yBqO9pJ9aHYwyfNGKoM95PH+aQuN3Hcmb9p9PW3ZkepUsLnI03gqbdAbIbAygq6atD3gkKF8LU617Wf9Zf47WHxpdEgAZb5OhVekc0bT+lOc95e9z4CnA0++XdeKNyRDxMDK0DQoj4YDsKwQesYbcPemBClzuWWjq8jDXOcuX3so82UKcv7HPjceabPjwBPzM37/Kvuoe1ekvcpQqBydPwL50yUsl2N3nTy1jcdDW8+HGiz3vyAYQpm8iyjOEv9qcUnV+fVkdOcZ9NwF1THvh1sGK6+QWIyONwYFLXY4CMwctydG/YNhzRXG5LafX/NoQ1wnTLDQkLbrLob4Hlc8ZyNdrhlsl4dsjFz2IBgxQba6kxBIEH7XEJjmn4/0rcft5pNc5iCS/o4Klo36tR+9ypJWNUzO64Pazj90DkbZURXUCgiXo8VAuwjmKRg6fG1pdLLiWe6kBQ2uxjv/rUkmtPd0hRy6vY+sbMqGi5EHUjqijQUvso5pmZBG7tOKbtaqNLEFZ/2Gg50HW9a8M3XIVAGI4IDYucYg+6jpBlY13Z6H79ozSdCETzAsw9OOBLZMA2ELJsvYGPsPtGgVmtjjsTfK6wITHA==,iv:AeEaUpvQdr6FwY9VexeAUASgSaSfYlszOj60oQ/LypE=,tag:WSUTWMc2fBW8RbBPNntHWA==,type:str]
        key: ENC[AES256_GCM,data:LWX923xawBAYMNstU09/Z25p6M4xlIVWJnsAx3opz0lu6iQdHBBlEv9gWySjRuDoIcJ8U7keotZwuiMwegCx2J7+lJTVi2ZBITZcOBU8RzI3bf45Omf15DrMH9yvtgfXr2BULTZ0SfC4Tk2C/Fh3XAL1ggQC1iQl9uAV8074OoLGOcz5BchjY9JbTesk7aecDxlgu5KOfUlIUTOsggVTxayAYt+uTJpb+akwwg27r6RWsEU4CSYj+qb6MgOu/vxiFOREfy041laJO2oVhj3HoQgjrLSzKiGrFtoq3zkFmlVaeE+XTjp7C/a53jOcR5JAiQRRwOnpV4dAoUI+Nn0EwmRSXcHT7cGhUtV/PlYi9NdZ8tjZ8f+rOimhLk2OMAjTocxjdBCaIq8D4hZzyYayJg==,iv:kbyGMApPTwqabsHEryLfXhPgUqzEZ4+A+PE0/trC5po=,tag:gZeA6T6UX7exCk26Fzfj5g==,type:str]
    # secret: The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:PA5w7aHIciMSqYDJ0sNxHLH3EL13HELVbDo8ByhHqKI=,tag:p63rAxKU1rf4zEPc4A8crw==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.33.0
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.12.50
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
                  # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
                  # authorizationConfig:
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: webhook # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: Deny
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         matchConditions:
                  #             - expression: has(request.resourceAttributes)
                  #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: in-cluster-authorizer # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: NoOpinion
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.33.0
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.33.0
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.33.0
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # secret: The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:hGQIIe1xcvZL0N0mUZPI0QN4HOjcctAyB8dEGpgzh3zMblwwMotQtWjMl7BCMPcGg4llWtI+xQtb9IpAB8WNLVoOlHLlFt4Pmet5cY9vv9mw57hg+wHbhd6G1+bYU3TKQeYDGmu61q1gJQn8e6hOtsGdxC/i8LJND2RVjk2Nht0MTQEtoH1zKIVBRqW9UhtuvU3jtVe4c1RlNx+v0QSgtNyinE+0Qd7IvYuL4qy+vOn/7e3aJ0B3wKnAFmoNB9nAcLvIIeN92B+3abPF2HNRBCMbarqWu2ONm8Ctfngnt2b0n/vJp6AKgW+qp70yDEZBxvsya1s3wV+CLr5C5vCyxz7qsfK6zwSQdj7p1haTBJDCcf1M6oab66I+HCHfXZAC1rGnK6hfc5nMVR5t3XzdrpTWN1YssVIuOa9Z/XTzLpoGyQtz0bYKZc3lUK/ylUevrTDmUvvXKf3jcwo3YhB9owgz+Kc4gU7oksPIwMAG4e4dxEJvRr7x0GQyNR5bcOmW1mQoEDV4hK6PF9FM6715bRjAMseBuamYM0BPRG22eUoWC6NI0e5mAymNAajlprwb1B1EyPDsUpK+vQBcFfHnWhQ7RIfcq2pfehCRtz0GwXV+OAqxN9Tv65/NaxEuQ5FhNVPnWkpHxp9oyHE7aZlJ2eLhq4oFbNemh9B0GWds3/jZZBbKyjDH9lW+8FkxL+MP5lIRzavE02T3jHAa0/wZRhb7H59WrxfHLgpCN+xPmoxU2nPJKzU9FiCmpWnKPeV7Ithqaj9NfaLUV7dgTw1D5jc75WhkiAaQRa8051fF6ViKHL9eCHwKn5Y6Km5DxTWUCUb/2Syn1UCud96I61e+5oQfPuPTncIaybUwXOBXp2ryVYpVqKkR8AnlpJWd69Rde5dpM/aPxzj9q2hD0EFEA/ikKPGFo4ctq1I3xX742c7xgWdOi4rrr5UosXSMjOBxDVCKd8YS3gpaDBSpDLPksLgF6A4RQF3hSQo3D0TPwg19pX+G3BzbiMY9NWdaS/0vgH5/1A==,iv:GIqsL1EnOyJbuvUycApPFTrOsugQPI1s6T8JnNlNZs8=,tag:KLpRHjhuLI3dehkzsAUDwQ==,type:str]
            key: ENC[AES256_GCM,data:TWxf3UdesuR/PilNeuYzla5jO2GX3AL6jCtpWWpS1P0A5zRpX8aKKE8RVE71xBKDJ750fQ8x+YUSLAOD7/JkiHTYHk+UeJnrEOEMhvT4ZkP9huM7z/dnjfNCOfHy1W5vvB441DmuC/Sk2P62dQxiJboYW82YejrcNHwCsR8nbyWVBu1M2iy3jHV4dOIXbqk0mDjMEbgPqKEqFSEAWuJZ/5XfptYoeh3NKFmcpuakMREoTrOisY22E1HAIZSFyxW9J08iRo6iH0PBuXBjHvlROf6KrIw9+rci8tjUXq6f0B5LBUoQr5kOiEEGM9kr8kgbcJtwBCsF3FYliX/SFci3wwvyx0MebYjodXQVKwaUZuAntREzulF6HVpqvwpXGKjNSx7YXBSP2WnLRl0QJcTaMw==,iv:3YN4HqnH1cYg7f0y1EgKFlCghGcM3Iu505MMIafezCE=,tag:CJLQrfRXWlYp7fq11+DKTw==,type:str]
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.21
        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        advertisedSubnets:
            - 192.168.12.0/24
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
# # Decryption secret example (do not use in production!).
# aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
# # Core DNS specific configuration options.
# coreDNS:
#     image: registry.k8s.io/coredns/coredns:v1.12.1 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
# # Allows running workload on control-plane nodes.
# allowSchedulingOnControlPlanes: true
sops:
    lastmodified: "2025-07-23T17:27:46Z"
    mac: ENC[AES256_GCM,data:k2VmbGsD/hUC2xH/+3ANW8wAvKgWc7x2o1PMLaf9Yv920wP1lV59yq2BLNumnrCi7r0zcVa8cvv0PxK+Zj6NxTfkCq+6NIEUL6xpz7jKx2ezwDtsEHvkFdic6imxPpDYDZ8LPncuuEg6s7tNMyJVOcx7kG52h8XioOQ/eWBIF34=,iv:wZwRYejcMkljGTzDn0jb+aGNX1IaK7g1oZgLuxZOcxk=,tag:FhLeWBkP6t2pp4g0ix5zkQ==,type:str]
    pgp:
        - created_at: "2025-07-23T17:27:45Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hF4DOSLw1rOxnykSAQdAdXhRZnhHmgJ0yk3/r36SuTsSQMAImY2rrdzci+9XNkAw
            txT8PIGxni6Q6/KN4QSJfy5jgNAJYEWxuAKDB2eYDdWWCWDudYh7Qim5JRpe0ZOl
            0lwBuxQnfyRE2cuwNTOnlYit99DxJqqLpqLO5cVE974wPnfZAbx+pt5Q8GmXyoAk
            Yv9R0M6eSoW9heuvFpjGqTWdrmKwsb75/awShhUgsjIA19O4tRW9CUwqX2ORnA==
            =8NHc
            -----END PGP MESSAGE-----
          fp: C0B224C0F27D4BD397DB7AD23922F0D6B3B19F29!
        - created_at: "2025-07-23T17:27:45Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hF4DQj/fwcZAP5kSAQdA20EHWMFSE+j9X2c0NbbdLf0Q57ys3o0a0BjH8/vJVB8w
            VlqS4fKJ5HUH5Iw1/Kjx3QI5Urmxckwz1NcDiot9PHvP7kikRJ5PRwf/aVq8lVq5
            0lwBhBZPtURq/GFY64e4il+sKiZX6i+puXObTwSzrRAkZH+0by/shBVYe/LHOr0a
            oXk1jETRKGQnTMgMrz440Lku4aBGQZkC8rdq8gWC0pBPvifaEmubzsmrMq/dTg==
            =FQle
            -----END PGP MESSAGE-----
          fp: A07340A6AC042B09AAA7F402423FDFC1C6403F99!
    encrypted_comment_regex: ^\s*(enc|encrypt|secret):?.*$
    version: 3.10.2
